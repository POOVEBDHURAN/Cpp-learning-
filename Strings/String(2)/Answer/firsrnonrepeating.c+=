/*) In a system that analyzes text for unique identifiers, you need to find the first nonrepeating character in a string. This feature helps in identifying unique elements in a 
dataset or text.
Problem Statement:
Write a function firstNonRepeatingChar that takes a string str and returns the first nonrepeating character. If there is no such character, return an empty character ''.*/
#include <iostream>
#include <string>
#include <unordered_map>
using namespace std;

class Solution {
public:
    char firstNonRepeatingChar(string str) {
        unordered_map<char, int> charCount;
        for (char c : str) {
            charCount[c]++;
        }
        for (char c : str) {
            if (charCount[c] == 1) {
                return c;
            }
        }
        return '\0'; // Return null character if no non-repeating character is found
    }
};

int main() {
    Solution solution;
    string str = "swiss";
    char result = solution.firstNonRepeatingChar(str);
    cout << "First Non-Repeating Character: " << result << endl;
    return 0;
}

/*Test Cases:
1. Input: "swiss"
Expected Output: 'w'
2. Input: "hello"
Expected Output: 'h'
3. Input: "aabbcc"
Expected Output: ''
4. Input: "abcdef"
Expected Output: 'a*/
